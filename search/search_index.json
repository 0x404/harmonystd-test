{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#arkts","title":"ArkTS\u6807\u51c6\u5e93\u63a5\u53e3\u6d4b\u8bd5","text":"<ul> <li>@ohos.util.ArrayList</li> <li>@ohos.util.Deque</li> <li>@ohos.util.HashMap</li> <li>@ohos.util.HashSet</li> <li>@ohos.util.LinkedList</li> <li>@ohos.util.List</li> <li>@ohos.util.PlainArray</li> <li>@ohos.util.Stack</li> <li>@ohos.util.TreeMap</li> <li>@ohos.util.TreeSet</li> <li>@ohos.util.Vector</li> </ul>"},{"location":"#typescript","title":"TypeScript\u6807\u51c6\u5e93\u6d4b\u8bd5","text":"<ul> <li>TS.ArrayList</li> <li>TS.HashMap</li> <li>TS.HashSet</li> </ul>"},{"location":"device/","title":"\u6d4b\u8bd5\u8bbe\u5907","text":""},{"location":"device/#_2","title":"\u786c\u4ef6\u4fe1\u606f","text":"\u786c\u4ef6\u7c7b\u578b \u4fe1\u606f GPU 12th Gen Intel(R) Core(TM) i5-12600KF Memory 32GB DDR4 3600HZ"},{"location":"device/#_3","title":"\u8f6f\u4ef6\u4fe1\u606f","text":"\u8f6f\u4ef6\u7c7b\u578b \u4fe1\u606f \u64cd\u4f5c\u7cfb\u7edf 10.0.22621.2861 (Win11 22H2 2022 Update) DevEco Studio devecostudio-windows-3.1.0.501"},{"location":"device/#typescript","title":"TypeScript\u73af\u5883","text":"\u7c7b\u578b \u4fe1\u606f node.js v16.19.1 tsc Version 5.3.3"},{"location":"device/#deveco","title":"DevEco\u865a\u62df\u673a","text":""},{"location":"device/#huawei-phone","title":"Huawei Phone","text":"\u7c7b\u578b \u4fe1\u606f CPU cores 4 RamSize 6144MB CPU/ABI X86 API 9 Density 450dpi ScreenSize 6.6\""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.ArrayList/","title":"@ohos.util.ArrayList","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.ArrayList/#ohosutilarraylistadd","title":"@ohos.util.ArrayList.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5ArrayList\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let list = new ArrayList&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.add(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000168 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.ArrayList/#ohosutilarraylisthas","title":"@ohos.util.ArrayList.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.515000 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000060 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.ArrayList/#ohosutilarraylistinsert","title":"@ohos.util.ArrayList.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5ArrayList\u5bb9\u5668insert\u63a5\u53e3 </p> <p><pre><code>function test_insert(loopCount: number) {\n  let list = new ArrayList&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.insert(0,i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000100 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Deque/","title":"@ohos.util.Deque","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Deque/#ohosutildequeinsertfront","title":"@ohos.util.Deque.insertFront","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Deque\u5bb9\u5668insertFront\u63a5\u53e3 </p> <p><pre><code>function test_insert_front(loopCount: number) {\n  let deque = new Deque&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertFront(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000284 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Deque/#ohosutildequehas","title":"@ohos.util.Deque.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    deque.insertEnd(1);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    deque.insertEnd(1);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.717333 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000067 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Deque/#ohosutildequeinsertend","title":"@ohos.util.Deque.insertEnd","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Deque\u5bb9\u5668insertEnd\u63a5\u53e3 </p> <p><pre><code>function test_insert_end(loopCount: number) {\n  let deque = new Deque&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertEnd(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.036660 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashMap/","title":"@ohos.util.HashMap","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashMap/#ohosutilhashmapget","title":"@ohos.util.HashMap.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashMap\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>function test_get(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.set(i, 1);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.get(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000163 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashMap/#ohosutilhashmapset","title":"@ohos.util.HashMap.set","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashMap\u5bb9\u5668set\u63a5\u53e3 </p> <p><pre><code>function test_set(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.set(i, 1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000610 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashMap/#ohosutilhashmaphaskey","title":"@ohos.util.HashMap.hasKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff08\u6700\u597d\u60c5\u51b5\uff09\uff0cHashMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>function test_hasKey1(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  for (let i = 0; i &lt; 1000000; i++) {\n    hashMap.set(i,1)\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasKey(0)\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff08\u6700\u574f\u60c5\u51b5\uff09\uff0cHashMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>function test_hasKey2(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  for (let i = 0; i &lt; 1000000; i++) {\n    hashMap.set(i,1)\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasKey(1000000)\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000071 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000073 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashMap/#ohosutilhashmaphasvalue","title":"@ohos.util.HashMap.hasValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Hashmap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff08\u6700\u597d\u60c5\u51b5\uff09\uff0cHashMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>function test_hasValue1(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  for (let i = 0; i &lt; 1000000; i++) {\n    hashMap.set(i,i)\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasValue(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Hashmap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff08\u6700\u574f\u60c5\u51b5\uff09\uff0cHashMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>function test_hasValue2(loopCount: number) {\n  let hashMap = new HashMap&lt;number, number&gt;();\n  for (let i = 0; i &lt; 1000000; i++) {\n    hashMap.set(i,i)\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasValue(1000000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 21.393333 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 23.966667 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/","title":"@ohos.util.HashSet","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsetremove","title":"@ohos.util.HashSet.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>function test_remove(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.remove(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000138 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsetadd","title":"@ohos.util.HashSet.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.add(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000288 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsetforeach","title":"@ohos.util.HashSet.forEach","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668\u7684forEach\u63a5\u53e3,set\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_forEach(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.forEach((value?: number, key?: number) =&gt; {\n    });\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 63.176667 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsetvalues","title":"@ohos.util.HashSet.values","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668\u7684values\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a\u8f93\u5165\u7684loopCount </p> <p><pre><code>function test_values(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.values();\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000930 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsetentries","title":"@ohos.util.HashSet.entries","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668\u7684entries\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a\u8f93\u5165\u7684loopCount </p> <p><pre><code>function test_entries(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.entries();\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.001540 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.HashSet/#ohosutilhashsethas","title":"@ohos.util.HashSet.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a5000000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let set = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    set.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    set.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000118 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000070 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/","title":"@ohos.util.LinkedList","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/#ohosutillinkedlistget","title":"@ohos.util.LinkedList.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668get\u65b9\u6cd5 </p> <p><pre><code>function test_get(loopCount: number) {\n  const linkedList = new LinkedList&lt;any&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.add(`Element${i}`); // \u5411\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\n  }\n  const indexToGet = loopCount / 2; // \u83b7\u53d6\u94fe\u8868\u4e2d\u95f4\u4f4d\u7f6e\u7684\u5143\u7d20\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.get(indexToGet); // \u6839\u636e\u7d22\u5f15\u83b7\u53d6\u94fe\u8868\u4e2d\u7684\u5143\u7d20\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000064 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/#ohosutillinkedlistaddfirst","title":"@ohos.util.LinkedList.addFirst","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668addFirst\u65b9\u6cd5 </p> <p><pre><code>function test_addFirst(loopCount: number) {\n  const linkedList = new LinkedList&lt;any&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.addFirst(`Element${i}`); // \u5728\u94fe\u8868\u5934\u90e8\u63d2\u5165\u5143\u7d20\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000798 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/#ohosutillinkedlistadd","title":"@ohos.util.LinkedList.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668add\u65b9\u6cd5 </p> <p><pre><code>function test_add(loopCount: number) {\n  let linkedList = new LinkedList&lt;any&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.add(`Element${i}`); // \u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.001264 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/#ohosutillinkedlistinsert","title":"@ohos.util.LinkedList.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668insert\u65b9\u6cd5 </p> <p><pre><code>function test_insert(loopCount: number) {\n  const linkedList = new LinkedList&lt;any&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.add(`Element${i}`); // \u5411\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\n  }\n  const indexToInsert = loopCount / 2; // \u5728\u94fe\u8868\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.insert(indexToInsert, `NewElement${i}`); // \u5728\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.001480 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.LinkedList/#ohosutillinkedlisthas","title":"@ohos.util.LinkedList.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668has\u65b9\u6cd5 </p> <p><pre><code>function test_has(loopCount: number) {\n  const linkedList = new LinkedList&lt;any&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.add(`Element${i}`); // \u5411\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\n  }\n  const elementToFind = `Element${loopCount / 2}`; // \u5728\u94fe\u8868\u4e2d\u95f4\u4f4d\u7f6e\u63d2\u5165\u7684\u5143\u7d20\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.has(elementToFind); // \u5224\u65ad\u94fe\u8868\u662f\u5426\u542b\u6709\u6307\u5b9a\u5143\u7d20\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.057000 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/","title":"@ohos.util.List","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/#ohosutillistsort","title":"@ohos.util.List.sort","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5List\u5bb9\u5668sort\u63a5\u53e3 </p> <p><pre><code>function test_sort(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  for (let i = loopCount; i &gt; 0; i--) {\n    list.add(i);\n  }\n  const startTime = new Date();\n    list.sort((a: number, b: number) =&gt; a - b);\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.023360 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/#ohosutillistremove","title":"@ohos.util.List.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a50000 </p> <p><pre><code>function test_remove(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(50000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000 </p> <p><pre><code>function test_remove2(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.086740 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000067 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/#ohosutillistinsert","title":"@ohos.util.List.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5List\u5bb9\u5668insert\u63a5\u53e3 </p> <p><pre><code>function test_insert(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.insert(0,i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.036100 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/#ohosutillisthas","title":"@ohos.util.List.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a100000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 100000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    list.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.140000 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000063 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.List/#ohosutillistadd","title":"@ohos.util.List.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5List\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let list = new List&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.add(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000106 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/","title":"@ohos.util.PlainArray","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarrayadd","title":"@ohos.util.PlainArray.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let plainArray = new PlainArray&lt;string&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, \"test\");\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000154 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarrayclone","title":"@ohos.util.PlainArray.clone","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668clone\u65b9\u6cd5 </p> <p><pre><code>function test_clone(loopCount: number) {\n  const plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, `Value${i}`);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    const clonedArray = plainArray.clone(); // \u5728\u8fd9\u91cc\u8fdb\u884c clone \u64cd\u4f5c\uff0c\u514b\u9686\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.033600 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarraygetkeyat","title":"@ohos.util.PlainArray.getKeyAt","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668getKeyAt\u65b9\u6cd5 </p> <p><pre><code>function test_getKeyAt(loopCount: number) {\n  const plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, `Value${i}`);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.getKeyAt(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000058 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarrayhas","title":"@ohos.util.PlainArray.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, \"test\");\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, \"test\");\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000084 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000066 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarraygetindexofkey","title":"@ohos.util.PlainArray.getIndexOfKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668getIndexOfKey\u65b9\u6cd5\uff08\u6700\u574f\u60c5\u51b5\uff0c\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u952e\uff09 </p> <p><pre><code>function test_getIndexOfKey(loopCount: number) {\n  const plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, `Value${i}`);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.getIndexOfKey(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000124 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.PlainArray/#ohosutilplainarrayget","title":"@ohos.util.PlainArray.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668get\u65b9\u6cd5 </p> <p><pre><code>function test_get(loopCount: number) {\n  const plainArray = new PlainArray&lt;string&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, `Value${i}`);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.get(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000106 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Stack/","title":"@ohos.util.Stack","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Stack/#ohosutilstackpop","title":"@ohos.util.Stack.pop","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668pop\u63a5\u53e3 </p> <p><pre><code>function test_pop(loopCount: number) {\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    stack.push(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.pop();\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000064 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Stack/#ohosutilstackpush","title":"@ohos.util.Stack.push","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668push\u63a5\u53e3 </p> <p><pre><code>function test_push(loopCount: number) {\n  let stack = new Stack&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.push(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000128 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Stack/#ohosutilstackpeek","title":"@ohos.util.Stack.peek","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668peek\u63a5\u53e3 </p> <p><pre><code>function test_peek(loopCount: number){\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    stack.push(i);\n  }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      stack.peek();\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000060 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Stack/#ohosutilstacklocate","title":"@ohos.util.Stack.locate","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Stack\u5bb9\u5668\u7684locate\u63a5\u53e3\uff0cStack\u957f\u5ea6\u4e3a100000 </p> <p><pre><code>function test_locate(loopCount: number) {\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 100000; i++) {\n    stack.push(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.locate(100000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Stack\u5bb9\u5668\u7684locate\u63a5\u53e3\uff0cStack\u957f\u5ea6\u4e3a10000000 </p> <p><pre><code>function test_locate2(loopCount: number) {\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 10000000; i++) {\n    stack.push(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.locate(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.037333 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000065 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/","title":"@ohos.util.TreeMap","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/#ohosutiltreemapreplace","title":"@ohos.util.TreeMap.replace","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668replace\u63a5\u53e3 </p> <p><pre><code>function test_replace(loopCount: number) {\n  let treemap = new TreeMap&lt;number,number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treemap.set(i,i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treemap.replace(i,i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000333 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/#ohosutiltreemapset","title":"@ohos.util.TreeMap.set","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668set\u63a5\u53e3 </p> <p><pre><code>function test_set(loopCount: number) {\n  let treemap = new TreeMap&lt;number,number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treemap.set(i,i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000000 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/#ohosutiltreemapremove","title":"@ohos.util.TreeMap.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>function test_remove(loopCount: number) {\n  let treemap = new TreeMap&lt;number,number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treemap.set(i,i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treemap.remove(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000333 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/#ohosutiltreemaphasvalue","title":"@ohos.util.TreeMap.hasValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668hasValue\u63a5\u53e3 </p> <p><pre><code>function test_hasValue(loopCount: number) {\n  let treemap = new TreeMap&lt;number,number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treemap.set(i,i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treemap.hasValue(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 1.024667 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeMap/#ohosutiltreemaphaskey","title":"@ohos.util.TreeMap.hasKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668hasKey\u63a5\u53e3 </p> <p><pre><code>function test_hasKey(loopCount: number) {\n  let treemap = new TreeMap&lt;number,number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treemap.set(i,i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treemap.hasKey(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000333 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeSet/","title":"@ohos.util.TreeSet","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeSet/#ohosutiltreesetadd","title":"@ohos.util.TreeSet.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeSet\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let treeset = new TreeSet&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeset.add(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000540 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeSet/#ohosutiltreesetremove","title":"@ohos.util.TreeSet.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeSet\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>function test_remove(loopCount: number) {\n  let treeset = new TreeSet&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treeset.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeset.remove(i);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000667 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.TreeSet/#ohosutiltreesethas","title":"@ohos.util.TreeSet.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeSet\u5bb9\u5668has\u63a5\u53e3 </p> <p><pre><code>function test_has(loopCount: number) {\n  let treeset = new TreeSet&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    treeset.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeset.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000000 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Vector/","title":"@ohos.util.Vector","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Vector/#ohosutilvectorhas","title":"@ohos.util.Vector.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cVector\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number) {\n  let vector = new Vector&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    vector.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.has(500000);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cVector\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has2(loopCount: number) {\n  let vector = new Vector&lt;number&gt;();\n  for (let i = 0; i &lt; 500000; i++) {\n    vector.add(i);\n  }\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.has(0);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.463000 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.000333 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/%40ohos.util.Vector/#ohosutilvectoradd","title":"@ohos.util.Vector.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Vector\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number) {\n  let vector = new Vector&lt;number&gt;();\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.add(1);\n  }\n  const endTime = new Date();\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  console.log(`!${test_id}: ${averageTime} ms`);\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.000192 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.ArrayList/","title":"TS.ArrayList","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.ArrayList/#arrayprototypesplice","title":"Array.prototype.splice","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u539f\u751f\u6570\u7ec4splice\u63a5\u53e3\u7528\u4e8e\u63d2\u5165\u5143\u7d20 </p> <p><pre><code>  function test_array_splice_insert(loopCount: number) {\n    let list: number[] = [];\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      list.splice(0, 0, i);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.002620 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.ArrayList/#arrayprototypeincludes","title":"Array.prototype.includes","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09\u539f\u751f\u6570\u7ec4\u7684includes\u63a5\u53e3\uff0c\u6570\u7ec4\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>  function test_array_includes_worst(loopCount: number) {\n    let list = Array.from({ length: 500000 }, (_, i) =&gt; i);\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      list.includes(500000);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09\u539f\u751f\u6570\u7ec4\u7684includes\u63a5\u53e3\uff0c\u6570\u7ec4\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>  function test_array_includes_best(loopCount: number) {\n    let list = Array.from({ length: 500000 }, (_, i) =&gt; i);\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      list.includes(0);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.376333 ms \u6d4b\u8bd5\u7528\u4f8b 2 node 0.000001 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.ArrayList/#arrayprototypepush","title":"Array.prototype.push","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u539f\u751f\u6570\u7ec4push\u63a5\u53e3 </p> <p><pre><code>function test_array_push(loopCount: number) {\n    let list = [];\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      list.push(1);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000016 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashMap/","title":"TS.HashMap","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashMap/#mapprototypehasvalue","title":"Map.prototype.hasValue","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Map\u7ed3\u5408Array\u7684\u65b9\u5f0f\u6a21\u62df\u7684hasValue\u63a5\u53e3\uff08\u6700\u597d\u60c5\u51b5\uff09\uff0cMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>  function test_map_hasValue_best(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    for (let i = 0; i &lt; 1000000; i++) {\n      map.set(i, i)\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      Array.from(map.values()).includes(0);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Map\u7ed3\u5408Array\u7684\u65b9\u5f0f\u6a21\u62df\u7684hasValue\u63a5\u53e3\uff08\u6700\u574f\u60c5\u51b5\uff09\uff0cMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>  function test_map_hasValue_worst(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    for (let i = 0; i &lt; 1000000; i++) {\n      map.set(i, i)\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      Array.from(map.values()).includes(1000000);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 4.100000 ms \u6d4b\u8bd5\u7528\u4f8b 2 node 4.830000 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashMap/#mapprototypehas","title":"Map.prototype.has","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Map\u5bf9\u8c61\u7684has\u63a5\u53e3\uff08\u6700\u597d\u60c5\u51b5\uff09\uff0cMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>  function test_map_hasKey_best(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    for (let i = 0; i &lt; 1000000; i++) {\n      map.set(i, 1)\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      map.has(0)\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Map\u5bf9\u8c61\u7684has\u63a5\u53e3\uff08\u6700\u574f\u60c5\u51b5\uff09\uff0cMap\u957f\u5ea6\u4e3a1000000 </p> <p><pre><code>  function test_map_hasKey_worst(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    for (let i = 0; i &lt; 1000000; i++) {\n      map.set(i, 1)\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      map.has(1000000)\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000004 ms \u6d4b\u8bd5\u7528\u4f8b 2 node 0.000003 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashMap/#mapprototypeget","title":"Map.prototype.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Map\u5bf9\u8c61\u7684get\u63a5\u53e3 </p> <p><pre><code>  function test_map_get(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    for (let i = 0; i &lt; loopCount; i++) {\n      map.set(i, 1);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      map.get(i);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000024 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashMap/#mapprototypeset","title":"Map.prototype.set","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Map\u5bf9\u8c61\u7684set\u63a5\u53e3 </p> <p><pre><code>function test_map_set(loopCount: number) {\n    let map = new Map&lt;number, number&gt;();\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      map.set(i, 1);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000071 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/","title":"TS.HashSet","text":""},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypeentries","title":"Set.prototype.entries","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668\u7684entries\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a\u8f93\u5165\u7684loopCount </p> <p><pre><code>  function test_set_entries(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.entries();\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000002 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypehas","title":"Set.prototype.has","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Set\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>  function test_set_has_worst(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; 500000; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.has(500000);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Set\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a5000000 </p> <p><pre><code>  function test_set_has_best(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; 500000; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.has(0);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000006 ms \u6d4b\u8bd5\u7528\u4f8b 2 node 0.000008 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypedelete","title":"Set.prototype.delete","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668delete\u63a5\u53e3 </p> <p><pre><code>  function test_set_remove(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.delete(i);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000042 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypeforeach","title":"Set.prototype.forEach","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668\u7684forEach\u63a5\u53e3,set\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>  function test_set_forEach(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; 500000; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.forEach((value, key) =&gt; {\n      });\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 1.400000 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypevalues","title":"Set.prototype.values","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668\u7684values\u63a5\u53e3\uff0cset\u957f\u5ea6\u4e3a\u8f93\u5165\u7684loopCount </p> <p><pre><code>  function test_set_values(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.add(i);\n    }\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.values();\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000004 ms"},{"location":"%E6%A0%87%E5%87%86%E5%BA%93%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/TS.HashSet/#setprototypeadd","title":"Set.prototype.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_set_add(loopCount: number) {\n    let set = new Set&lt;number&gt;();\n    const startTime = new Date();\n    for (let i = 0; i &lt; loopCount; i++) {\n      set.add(1);\n    }\n    const endTime = new Date();\n    const executionTime = endTime.getTime() - startTime.getTime();\n    const averageTime = executionTime / loopCount;\n    console.log(`!${test_id}: ${averageTime} ms`);\n  }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 node 0.000006 ms"}]}